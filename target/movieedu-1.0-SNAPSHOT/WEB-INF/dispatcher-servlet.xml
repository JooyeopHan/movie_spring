<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:context="http://www.springframework.org/schema/context"
             xmlns:task="http://www.springframework.org/schema/task"
             xmlns:jdbc="http://www.springframework.org/schema/jdbc"
             xmlns:mvc="http://www.springframework.org/schema/mvc"
             xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-4.3.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd
http://www.springframework.org/schema/mvc http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">

    <!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->

    <!-- Enables the Spring MVC @Controller programming com.example.movieedu.model -->
    <annotation-driven/>
    <task:annotation-driven/>
    <!--추가 (주엽)-->
    <mvc:annotation-driven />


<!--     Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
    <resources mapping="/resources/**" location="/resources/" />

    <!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
    <beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <beans:property name="prefix" value="/WEB-INF/views/"/>
        <beans:property name="suffix" value=".jsp"/>
    </beans:bean>

    <context:component-scan base-package="com.example.movieedu"/>
    <context:component-scan base-package="com.example.movieedu.model"/>
    <context:component-scan base-package="com.example.movieedu.model.dao"/>
    <context:component-scan base-package="com.example.movieedu.model.vo"/>
    <context:component-scan base-package="com.example.movieedu.service"/>


    <beans:bean id="multipartResolver"
                class="org.springframework.web.multipart.commons.CommonsMultipartResolver"/>

<!--    <beans:bean id="dataSource" class="org.springframework.jndi.JndiObjectFactoryBean">
        <beans:property name="jndiName" value="java:comp/env/jdbc/oraDB"/>
    </beans:bean>-->

<!--    <beans:bean id = "dataSource" class = "org.apache.tomcat.dbcp.dbcp2.BasicDataSource">-->
    <beans:bean id = "dataSource" class = "org.springframework.jdbc.datasource.DriverManagerDataSource">
        <beans:property name="driverClassName" value = "oracle.jdbc.driver.OracleDriver"/>
        <beans:property name="url" value="jdbc:oracle:thin:@192.168.45.172:1521:XE"/>
        <beans:property name="username" value="mpro1"/>
        <beans:property name="password" value="movie"/>
    </beans:bean>

    <beans:bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
        <beans:property name="dataSource" ref="dataSource"/>
        <beans:property name="mapperLocations" value="classpath:*Mapper.xml"/>
        <beans:property name="configLocation" value="classpath:mybatis-config.xml"/>
    </beans:bean>

    <beans:bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <beans:constructor-arg ref="sqlSessionFactoryBean"/>
    </beans:bean>


</beans:beans>
